<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSpy v2006 rel. 3 sp1 (http://www.altova.com) by Don Cuthbertson (private) --><xs:schema xmlns="http://www.twiststandards.org/3.1/ElectronicBilling" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.twiststandards.org/3.1/ElectronicBilling" elementFormDefault="qualified" attributeFormDefault="unqualified">	<xs:include schemaLocation="TWIST3.1.TWISTCore.TwistMsg.200609.xsd"/>	<!-- Copyright 2006 TWIST Process Innovations, LTD. -->	<!--Working Draft-->	<!-- This schema is available for comment and the structure is subject to change -->	<!-- Version 3.1 September 2006 -->	<!-- Root Specification Document: 0505TWIST_GEBSBRequirements_v0_21_Baseline.doc-->	<xs:complexType name="ElectronicBillingMsg">		<xs:complexContent>			<xs:extension base="ResponseMessage">				<xs:sequence>					<xs:element name="electronicStatement" type="ElectronicStatement" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="ElectronicStatement">		<xs:sequence>			<xs:element name="statementHeader" type="StatementHeader"/>			<xs:element name="statement" type="Statement" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="Statement">		<xs:sequence>			<xs:element name="account" type="Account"/>			<xs:element name="taxExplanation" type="TaxExplanation" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="rateInfo" type="RateInfo" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="currencyTranslation" type="CurrencyTranslation" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="balance" type="Balance" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="compensation" type="Compensation" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="service" type="Service" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="taxDetails" type="TaxDetails" minOccurs="0"/>			<xs:element name="balanceAdjustmentDetails" type="BalanceAdjustmentDetails" minOccurs="0" maxOccurs="unbounded"/>			<xs:element name="serviceAdjustment" type="ServiceAdjustment" minOccurs="0" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="StatementHeader">		<xs:sequence>			<xs:element name="stmtSender" type="PartyContactInfo"/>			<xs:element name="stmtReceiver" type="PartyContactInfo"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="Account">		<xs:sequence>			<xs:element name="accountLevel" type="AccountLevel">				<xs:annotation>					<xs:documentation>Defines the level at which the account exists within a hierarchical structure. Values are: Detail – The account is a real deposit/current account. It is either not a member of a hierarchy or it is at the lowest level in a hierarchy. It the account is a member of a hierarchy, the Parent Qualifier and Parent Account Number elements are required. Intermediate – The account exists at an intermediate level within a hierarchy. It can be a real deposit/current account or a fictitious account used exclusively to total information from lower levels in the hierarchy. Intermediate level accounts require the Parent Level and Parent Account Number elements. Summary – The account is at the highest level in a hierarchy. It can be a real deposit account or a fictitious account used exclusively to total information from lower levels in the hierarchy. The Parent Level and Parent Account Number elements must not be present.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="bban" type="BBAN">				<xs:annotation>					<xs:documentation>A code which, combined with the Account Level, uniquely identifies the account or relationship parent within the FI environment. Sometimes referred to as the Domestic Account Number or the BBAN.Notes: The “Account Number” used for relationship parent accounts may be any alphanumeric identification that the FI chooses and may deviate from the FI’s standard account numbering format. The Account Number should be in the same customer recognizable format as is used on FI statements and other documents. The Account Number is not the IBAN number. It is sometimes referred to as the BBAN. The Account Number may contain internal punctuation such as dashes and blanks, but must not contain leading blanks. In other words the number must be left justified in the element value. Account numbers (and Account Level values) must be consistent in format from month to month so that the receiving systems can recognize that this month’s account statement belongs to the same account received last month. For example, to send an account number as “1-2345-6” one month and as “123456” the next month is forbidden.</xs:documentation>				</xs:annotation>			</xs:element>			<!--renamed from accountNumber (0606-73)-->			<xs:element name="iban" type="IBAN" minOccurs="0">				<xs:annotation>					<xs:documentation>An expansion of the domestic account number which includes the FI’s two character country code and two check digits as the first four characters of the element. Must conform to the ISO standard 13616. Must not contain any blanks or internal punctuation.</xs:documentation>				</xs:annotation>			</xs:element>			<!--added (0606-74)-->			<xs:element name="statementStartDate" type="xs:date" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates the starting date of the statement periodNote: The Statement Start Date and the Statement End Date determine the number of days in the statement period and the number of days in the year involved.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="statementEndDate" type="xs:date">				<xs:annotation>					<xs:documentation>Indicates the ending date of the statement periodNote: The Statement Start Date and the Statement End Date determine the number of days in the statement period and the number of days in the year involved. In the absence of the Statement Start Date, the number of days in the statement period is assumed to be the actual number of calendar days in the Statement End Day month.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="statementProductionDate" type="xs:date">				<xs:annotation>					<xs:documentation>Indicates the date on which the financial institution produced this statement</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="statementStatus" type="StatementStatus" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates the status, or nature, of the statement. Values are: Original - The statement uniquely identified by the Account Level, Account Number, Statement Start Date and Statement End Date is the original statement. Replace – This statement replaces a previously transmitted statement. The statement to be replaced is identified by the Account Level, Account Number, Statement Start Date and Statement End Date. Test – This is a test statement and does not represent real events.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="accountName" type="AccountName">				<xs:annotation>					<xs:documentation>The account name or title used within the FI to identify the account or summary</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="domicileBankQualifier" type="DomicileBankQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>A code designating the coding structure used in the Domicile Bank Identifier. Values are: 13 – USA Federal Reserve Routing Code (FRRC) CF – Canadian Financial Institution Routing Number SW – Society for Worldwide Interbank Financial Telecommunications (SWIFT)Note: If Domicile Bank Qualifier is present then Domicile Bank Identifier must be present</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="domicileBankIdentifier" type="DomicileBankIdentifier" minOccurs="0">				<xs:annotation>					<xs:documentation>A code used to uniquely identify the account’s domicile bank, the bank in which the account resides. This domicile bank may be a member of a larger FI which originated the message and which may have an identifier code different from the domicile bank code. Note: If Domicile Bank Identifier is present then Domicile Bank Qualifier must be present. It is important to note whether this account resides in the same bank as identified in the Statement Header element Sender Identifier Code. It this account is domiciled in a different bank/branch and uses different service prices or service ID codes, then the domicile bank must be identified here.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="parentAccount" type="ParentAccount" minOccurs="0"/>			<xs:element name="compensationMethod" type="CompensationMethod">				<xs:annotation>					<xs:documentation>A code which specifies whether the account pays charges and taxes due to the Financial Institution and, if so, how they are paid. Values are:  No – The account does not pay any charges due. Some other account in the hierarchy is debited or invoiced for charges and taxes due. Debited – This account was debited for any charges or taxes due. Invoiced – The account or summary was invoiced for charges and taxes due. DelayedDebit – The account will be automatically debited on a future dateNote: In a hierarchical structure, charging typically occurs only at a specific level. For example, if all lowest level detail accounts are charged at the detail level, then the higher level accounts or summaries present simple totals of the charges and taxes that occurred at the detail level. If detail account charges are totaled or calculated at an intermediate level and charged at that level, then the higher level accounts or summaries present simple totals of the charges and taxes that occurred at the intermediate level. There should be no recalculation of charges and actual debiting/invoicing at levels above where the actual charging occurs.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="debitAccount" type="DebitAccount" minOccurs="0">				<xs:annotation>					<xs:documentation>A code which identifies the account which has been or will be debited for charges and taxes due.Notes: This element is typically used if the Compensation Method is Debited or DelayedDebit</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="delayedDebitDate" type="xs:date" minOccurs="0">				<xs:annotation>					<xs:documentation>The future date on which the named account will be automatically debited for charges and taxes due.Notes: This element is typically used if the Compensation Method is Debited or DelayedDebit</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="settlementAdvice" type="SettlementAdvice" minOccurs="0">				<xs:annotation>					<xs:documentation>A free form message which advises the customer about the settlement of any charges and taxes due.Notes: Examples are “For settlement details, please see Summary Statement”, “In reimbursement, account number 123-5555 at London Branch will be debited on the 17. March 2005"</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="accountBalanceCurrencyCode" type="CurCode">				<xs:annotation>					<xs:documentation>The ISO currency code for the Account Balance Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="settlementCurrencyCode" type="CurCode" minOccurs="0">				<xs:annotation>					<xs:documentation>The ISO currency code for the Settlement Currency.Note: If the account is a member of a Billing Relationship, than this account and all other accounts in the relationship must have the same Settlement Currency Code. If the account is an intermediate or summary account that summarizes multiple billing relationships, then this element must not be present</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="hostCurrencyCode" type="CurCode" minOccurs="0">				<xs:annotation>					<xs:documentation>The ISO currency code for the Host Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxCalculationMethod" type="TaxCalculationMethod" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifies the method used by the bank or taxing authority to calculate the taxes on this statement. Values are: NoTaxes  No taxes are calculated or due on this statement. There is no Tax Section BSBMethodA  Line-by-line per service calculation and settlement currency translation. BSBMethodB – Line by line per service calculation with settlement currency translation performed on the statement tax total. BSBMethodC – Group tax calculation with group settlement currency translation. BSBMethodD  Line-by-line per service calculation with all charges and taxes in the Pricing currency. Undefined – The tax calculation method is not identified.Notes:  If the method is not known then the Undefined value should be used. If this element is not present then the Undefined value is assumed</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxRegionCode" type="TaxRegionCode" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifies the tax region in which the account resides.Notes: This code is equivalent to the Tax Section, Tax Region # element</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxRegionResident" type="TaxRegionResident" minOccurs="0">				<xs:annotation>					<xs:documentation>Specifies whether the account owner is a resident of the tax region in which the account resides. Tax implications may be involved if account owner does not reside in the account’s tax region. Yes – The account owner is a resident of the tax region. No – The account owner is not a resident of the tax region.Notes: If this element is not present then the Yes value is assumed</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="ownerResidence" type="OwnerResidence" minOccurs="0">				<xs:annotation>					<xs:documentation>: Identifies the account owner’s resident country or geographic location if the owner does not reside in the account’s tax region.Notes: This element is required only if the Tax Region Resident element has the value No.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="bankContactName" type="BankContactName" minOccurs="0">				<xs:annotation>					<xs:documentation>Name of the person to contact at the domicile bank’s location. This is typically the individual to be contacted in case of problems of a business nature. The individual to be contacted in case of problems of a technical transmission nature is carried in the Statement Header Section.Notes: It the contact individual in the Statement Header Section is the same as the contact individual in the Account Section, then the Bank Contact information need not be sent</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="bankContactPhone" type="PhoneNumber" minOccurs="0">				<xs:annotation>					<xs:documentation>Bank Contact’s phone number</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="bankContactEmail" type="Email" minOccurs="0">				<xs:annotation>					<xs:documentation>Bank Contact’s Email address</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="bankContactFax" type="PhoneNumber" minOccurs="0">				<xs:annotation>					<xs:documentation>Bank Contact’s facsimile (Fax) number</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="ParentAccount">		<xs:sequence>			<xs:element name="parentLevel" type="ParentLevel" minOccurs="0">				<xs:annotation>					<xs:documentation>Defines the level at which the Parent of this account exists within a hierarchical structure. If there is no Parent for this account then this element must not be present. Values are: Intermediate – The parent account exists at an intermediate level within a hierarchy Summary – The parent account is at the highest level in a hierarchy. Note: If Parent Level is present then Parent Account Number must be present</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="parentBankQualifier" type="DomicileBankQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>A code designating the coding structure used in the Parent Bank Identifier. Values are: 13 – USA Federal Reserve Routing Code (FRRC) CF – Canadian Financial Institution Routing Number SW – Society for Worldwide Interbank Financial Telecommunications (SWIFT)Note:  If Parent Bank Qualifier is present then Parent Bank Identifier must be present. If the Parent Account’s bank is the same as the statement account’s bank, then this element is not required.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="parentBankIdentifier" type="DomicileBankIdentifier" minOccurs="0">				<xs:annotation>					<xs:documentation>A code used to uniquely identify the parent account’s bank if the parent account’s bank is different from the statement account’s bankNote:  If Parent Bank Identifier is present then Parent Bank Qualifier must be present. If the Parent Account’s bank is the same as the statement account’s bank, then this element is not required.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="parentAccountBBAN" type="BBAN" minOccurs="0"/>			<!--changed from parentAccountNumber string max 34 to parentAccountBBAN type:BBAN (string max30) (0606-75)-->		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxExplanation">		<xs:sequence>			<xs:element name="taxReason" type="TaxReason" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Container to group Tax Reason Code and Tax Reason Explanation</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxReason">		<xs:sequence>			<xs:element name="taxReasonCode" type="TaxReasonCode">				<xs:annotation>					<xs:documentation>An abbreviated code used elsewhere within the statement.Note: This code must be identical to the Zero Rated Code used elsewhere in the statement in order to match up and provide the Tax Reason Explanation</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxReasonExplanation" type="TaxReasonExplanation">				<xs:annotation>					<xs:documentation>The free form explanation or definition of the Tax Reason Code</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="RateInfo">		<xs:sequence>			<xs:element name="rateIdentifier" type="RateIdentifier">				<xs:annotation>					<xs:documentation>Defines the type of rate or factor</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="rateValue" type="RateValue">				<xs:annotation>					<xs:documentation>The value of the rate or factor identified by the Rate Identifier. The number of decimal places shown should reflect the actual number of decimal places used in calculations</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="daysInPeriod" type="DaysInPeriod" minOccurs="0">				<xs:annotation>					<xs:documentation>The number of days in the statement period. Used along with Days in Year for time dependent per annum rate values.Notes: If Days in Period and Days in Year are absent then the number of days in the period and the number of days in the year (365 or 366) can be determined using elements Statement Start Date and Statement End Date as contained in the Account Section - [changed from mandatory to optional 2006-237]</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="daysInYear" type="DaysInYear" minOccurs="0">				<xs:annotation>					<xs:documentation>The number of days in the year. Used along with Days in Period for time dependent per annum rate values [changed from mandatory to optional 2006-238]</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="CurrencyTranslation">		<xs:sequence>			<xs:element name="originalCurrency" type="CurCode">				<xs:annotation>					<xs:documentation>This field is the “from” currency in a currency translation.  For example:  GBP.  The format is expressed using ISO currency codes</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="targetCurrency" type="CurCode">				<xs:annotation>					<xs:documentation>This field is the “to” currency in a currency translation.  For example:  USD.  The format is expressed using ISO currency codes</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="translationValue" type="TranslationValue">				<xs:annotation>					<xs:documentation>This element is the translate rate at which one currency is translated into another currency.  It should reflect the actual rates used by the financial institutions billing system. For example, a EUR to USD translation at a rate of 1.30452.  One Euro is converted to $1.30452 in US Dollars</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="rateDescription" type="RateDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>A word description of the currency translation activity.  The description should indicate a “from” and “to” currency.  For example, “GBP to USD”.  The format is typically expressed using ISO currency codes.Notes: The unique specification of the “from” and “to” currencies involved should be made using the Original Currency and Target Currency elements</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="basis" type="CurCode" minOccurs="0">				<xs:annotation>					<xs:documentation>The currency utilized as the basis for the currency translation.  This would be the ISO currency code used as the basis for the conversion.  The presence of the Basis allows users to understand the “from” and “to” currencies.  The Basis code always indicates the “to” currency.  In some instances a single currency is always listed first in the billing statement</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="comments" type="Comments" minOccurs="0">				<xs:annotation>					<xs:documentation>This element is provided to hold comments that financial institutions wish to communicate to recipients of the statement to further clarify or add information about each currency translation. Each Currency Translation Section may have an optional comments element</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="Balance">		<xs:sequence>			<xs:element name="balanceIdentifier" type="BalanceIdentifier">				<xs:annotation>					<xs:documentation>: Defines the type of balance.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="balanceValue" type="Money">				<xs:annotation>					<xs:documentation>The value of the balance identified by the Balance Identifier. The number of decimal places shown should reflect the actual number of decimal places used for display and calculations.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="currencyType" type="CurrencyType" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifies the currency type used to report the Balance Value.  Account is the default value. </xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="Compensation">		<xs:sequence>			<xs:element name="compensationIdentifier" type="CompensationIdentifier">				<xs:annotation>					<xs:documentation>Defines the type of compensation value or total</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="compensationValue" type="Money">				<xs:annotation>					<xs:documentation>The value of the totals identified by the Compensation Identifier. The number of decimal places shown should reflect the actual number of decimal places used for display and calculations.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="currencyType" type="CurrencyType" minOccurs="0">				<xs:annotation>					<xs:documentation>Identifies the currency type used to report the Compensation Value. Settlement is the default value</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="Service">		<xs:sequence>			<xs:element name="bankServiceID" type="BankServiceID">				<xs:annotation>					<xs:documentation>The bank’s own, internal service identification code.  This is not the Common Code discussed below. This is the bank’s own code used to uniquely identify the service within the bank</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceQualifier" type="SubServiceQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>Qualifies the contents of the Sub Service Code. Values are: Lockbox – The Sub Service Code contains a lockbox number which identifies the lockbox using the service. Provides support for processing multiple lockboxes within one account. Store – The Sub Service Code contains a sore number which identifies the store using the service. Provides support for processing multiple stores within one account. MutuallyDefined – The meaing of the Sub Service Code is established by the trading partners SequenceNumber – The Sub Service Code is an arbitrary sequence number used to uniquely identify this Service Sections and prevent duplicate Service Sections within this statement. MemberAcount - The Sub Service Code is the account number of a member of a relationship structure. This allows a parent statement to include the same service as rolled up from its member accounts and still avoid duplicate service identification within the statement</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceCode" type="SubServiceCode" minOccurs="0">				<xs:annotation>					<xs:documentation>A unique number can be used to differentiate between multiple appearances of the same service in a Relationship Parent statement that contains all the individual services from the member accounts. For example, the statement may contain multiple service sections, all referring to the same service but with differing prices representing the actual prices for the different member accounts. The value “Member Account” can be used in Sub Service Qualifier and the member’s account number can be placed here in order to eliminate duplicate services within the Relationship Parent statement</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="commonCodeQualifier" type="CommonCodeQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>Qualifies the contents of the Common Code  Values: “AFP” or some other recognized common coding list.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="commonCode" type="CommonCode" minOccurs="0">				<xs:annotation>					<xs:documentation>A standard reference code used to uniquely identify this service across banks. This is not the bank’s internal Bank Service ID. This is a universal standard code such as the AFP (Association for Financial Professionals) code. Note that the IBC urges the banks to attach these codes to their services but it is not required. The software systems that reside in the corporate recipient’s office should have the ability to assign the proper code should the bank not send the common code or send a bad code</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceDescription" type="ServiceDescription">				<xs:annotation>					<xs:documentation>This is the bank’s service description. It is not the standard description related to the Common Code. It is the task of the systems that reside in the corporate recipient’s office to restate charges across banks using the Common Codes and the related common descriptions. Note that the common descriptions are not sent in the electronic statement.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceType" type="ServiceType" minOccurs="0">				<xs:annotation>					<xs:documentation>An optional element used to classify or organize different services by common characteristics.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="volume" type="Volume" minOccurs="0">				<xs:annotation>					<xs:documentation>The count or number of items (volume) involved in the charge.Notes: If the service doesn’t involve a per item charge, e.g. a Flat Charge or a Base Charge, then this element is not required. If this is a balance based charge (Overdraft Interest charge, FDIC charge ) then this is the balance used to calculate the charge expressed in the Pricing Currency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="pricingCurrencyCode" type="CurCode" minOccurs="0">				<xs:annotation>					<xs:documentation>The currency in which the Unit Price and Original Charge - Price are expressed. Use the ISO currency code</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="unitPrice" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The per item price used to calculate the charge expressed in the Pricing Currency.Notes: If the service doesn’t involve a per item charge, e.g. a Flat Charge or a Base Charge, then this element is not required. If the service is balance based such as an Overdraft Interest charge then this is the per annum rate used to calculate the charge</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="priceMethod" type="PriceMethod" minOccurs="0">				<xs:annotation>					<xs:documentation>Definition: A code which identifies how the charge was calculated. The absence of this code assumes that the charge is calculated as the product of Volume times Unit Price. Values are: Unit Priced: The charge is calculated as the product of Volume times Unit Price. This is the default value. Stamp Duty: The service is specifically identified as a Stamp Duty for accounting purposes. The charge is calculated as the product of Volume times Unit Price Base Charge: A fee that is charged in addition to the Volume times Unit Price when one or more units of the service are provided. Discount Price: The charge is calculated using a price which is lower than the quoted bank price.  Flat Charge: A fixed charge that is not tied to Volume or Unit Price. Flat Charge fees do not require a volume or Unit Price. The user may specify a Volume of “1”, a Unit Price equal to the Original Charge value, and use a Price Method = “Unit Priced”. List Price: A single service section where the Volume, Original Charge and Balance Required are the totals of two or more pricing tiers. The Unit Price is either absent or an average price equal to the Original Charge total divided by the Volume total. Some FIs will combine all the individual line elements in a volume discount structure into a single List Price line item where other FIs will list each of the contributing tiers using the Tiern Price Method.   Minimum Charge: The lowest charge possible for the service. For example, the Unit Price is $1 /unit , Volume is “1” and the minimum charge is $5. The minimum of $5 is actually charged.   Maximum Reduction: The maximum charge possible for the service even though Volume times Unit Price exceeds the maximum reduction value. Tiern: The line item represents a charge for one tier in a multi tier, volume discount charging structure. The “n” is a number in the range 1 through 9 which designates the tier used to charge out the volume that falls in that tier. Threshold Priced: (Equivalent to “range pricing”) The Unit Price is determined by the total volume. The total Volume is matched against volume/price tiers. When the Volume is equal to or greater than a tier value, then that tier’s Unit Price is used to charge out the entire Volume. Zone Price: Indicates different prices for the same service. Typically used in a Relationship Summary statement where the same service has a different price for different accounts in the relationship. Balance Based: The charge is calculated as a balance times a per-annum rate multiplied by a time factor. The balance is placed in the Volume element and the per-annum rate is in the Unit Price element. The balance is typically expressed as an average daily balance and the time factor is expressed as the number of days in the month over the number of days in the year. Note that Appendix E describes how to present an overdrawn (debit) interest charge in a Service Section.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="priceRule" type="PriceRule" minOccurs="0">				<xs:annotation>					<xs:documentation>Indicates that the charge calculation is based on a particular rule. The rule name is carried here and is defined by the trading partners. Note: Price Rule is typically used when none of the Price Method codes apply although some situations may require that both a Price Method and a Price Rule be identified in the same Service Section</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="paymentMethod" type="PaymentMethod">				<xs:annotation>					<xs:documentation>A code identifying the disposition of the calculated charge. Description of values are: Balance Compensable:  This code is used in the USA and allows the bank to offset a service charge with interest earned on the deposit account balance. The actual charges arising from Balance Compensable services are always calculated and charged at month end.  Hard Charge: The charge is not balance compensable and is due. In the absence of balance compensable charges in Europe, this would be the most commonly used code for services that are billed at month end. Previously Charged: The charge was previously assessed and is not part of the amount due as of this statement. This code is used for charges that were debited as the chargeable event took place. Invoiced separately: The charge was previously invoiced and is not part of the amount due as of this statement. This code is used for charges that were invoiced as the chargeable event took place. Waived: The charge is waived and not due. The waived amount must be placed in Original Charge. Free: The service is free, no charge, to the customer.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalChargePrice" type="Money">				<xs:annotation>					<xs:documentation>Amount of the calculated charge expressed in the Pricing Currency. This value does not include any tax on the service..</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalChargeSettlement" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>Amount of the calculated charge expressed in the Settlement Currency. This value does not include any tax on the service</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="balanceRequiredAccount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The average daily collected balance required to offset a Balance Compensable service charge., exclusive of taxes, expressed in the Account Currency.Notes: This element is used only for services whose Payment Method code is “Balance Compensable”. If the required balance is not known or not applicable then this element should not be present</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxDesignation" type="TaxDesignation" minOccurs="0">				<xs:annotation>					<xs:documentation> This element is required if taxes are involved with any portion of the statement. If taxes are not involved, as is the case with US bank billing statements, then this element need not be present If this element is present then the Service Tax Region element must also be presentA code identifying the taxable status of the service. The absence of this element assumes that the service is Exempt. Values are: Exempt: No taxes are due. This service is not repeated in the Tax Section. Zero Rated: The tax is due but at zero percent and a zero charge. This service is not repeated in the Tax Section. Taxable: One or more taxes are due on this service. The basic elements of this service are repeated in the Tax Section along with the tax</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="zeroRatedCode" type="ZeroRatedCode" minOccurs="0">				<xs:annotation>					<xs:documentation>A code identifying the underlying reason why the service is to be considered as Zero Rated. The contents of this element should cross reference with a free form explanation provided in a Tax Explanation Section. An example of a Zero Rated Code is “ beltaxauth”. This code could have an entry in the related Tax Explanation Section such as “Zero-rated by Belgium Tax Authority”.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceTaxRegion" type="ServiceTaxRegion" minOccurs="0">				<xs:annotation>					<xs:documentation>The Tax Region associated with this service.Notes: Enables the message recipient to relate the service to an individual Tax Region. This is particularly important when Service Sections for a parent relationship summary account statement roll up from multiple child accounts residing in different Tax Regions. Without this information it would be difficult to determine in which Tax Region the service was taxed</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalChargeHost" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>Required for methods A and B only.  Amount of the original charge expressed in the Host Currency. The Host Currency is  the currency in which the payment of tax obligations is usually submitted to the taxing authority. This is the same value as contained in Original Charge – Price and Original Charge – Settlement but expressed in the Host Currency This value does not include any tax amount. This value provides the basis for the tax calculations on this service</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceTaxHostAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The sum of all the individual taxes on the service expressed in the Host Currency. This is the sum of the individual Tax ID # Amt - Host elements. If there is only one tax on the service (one Tax ID #   element) then this value is equal to the Tax ID # Amt value.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceTaxPriceAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The following two elements may be included if the statement is using Tax Calculation Method A.  If the taxes are calculated using any other method, this additional information would be displayed in the TAX Section.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="totalChargeHostAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The sum of the Original Charge - Host and the Service Tax Amt - Host values. It represents the total charge for a service (including taxes) expressed in the Host Currency.Notes: The Charge plus Tax value is normally expressed in the Host Currency. This value may also be included in the Service Section as expressed in the Settlement Currency and Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="totalChargeSettlementAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the same value as carried in the Charge plus Tax - Host element but expressed in the Settlement Currency.Notes: The Charge plus Tax value is normally expressed in the Host Currency. This value may also be included in the Service Section as expressed in the Pricing Currency or Settlement Currency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="totalChargePriceAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the same value as carried in the Charge plus Tax - Host element but expressed in the Pricing Currency.Notes: The Charge plus Tax value is normally expressed in the Host Currency. This value may also be included in the Service Section as expressed in the Pricing Currency or Settlement Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentificationGroup" type="TaxIdentificationGroup" maxOccurs="3">				<xs:annotation>					<xs:documentation>There may be more than one tax assessed on a service depending upon the laws of the Tax Region.  A financial institution may elect to combine all tax rates into one “all inclusive tax rate” for the Tax Region or list each individual tax separately.  If there is only one “all inclusive tax rate” then only one set of Tax Identifier elements would be present.  If taxes are listed separately there may be multiple sets of the four Tax Identifier elements per each individual Service.  The standard accommodates both approaches.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxIdentificationGroup">		<xs:sequence>			<xs:element name="taxIdentifierNumber" type="TaxIdentifierNumber">				<xs:annotation>					<xs:documentation>This is the identifying number of a specific tax in the tax region used to calculate the tax obligation. (E.g.  Tax ID # 1, Tax ID # 1 Description, Tax #1 Rate).  Each Tax Identifier is a unique tax or may represent all taxes for a Tax Region.  Tax Identifiers should be as granular as possible for transparency.Note:  There may be multiple Tax Rate #’s and taxes per service within a Tax Region.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierDescription" type="TaxIdentifierDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the name used to describe an individual Tax Identifier (e.g. National VAT).</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierRate" type="TaxIdentifierRate">				<xs:annotation>					<xs:documentation>This is the rate used in the calculation to determine the tax obligation due for a specific Tax ID # . (e.g. .0300000000)</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierHostAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The amount of the tax obligation for the specific Tax ID #   expressed in the Tax Region’s Host Currency. Multiple appearances of this value within a Service Section are totaled in the Service Tax Amt – Host element.Note: Tax calculation Method D uses the Pricing currency to express this tax amount. (Required for methods A and B only)</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierPriceAmount" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the same value as carried in the Tax ID # Amt - Host element but allows the sender to optionally express the value in the Pricing Currency. Multiple appearances of this value within a Service Section are totaled in the Service Tax Amt – Price element</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxDetails">		<xs:sequence>			<xs:element name="taxRegion" type="TaxRegion" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxRegion">		<xs:sequence>			<xs:element name="taxRegionNumber" type="TaxRegionNumber">				<xs:annotation>					<xs:documentation>A Tax Region # designates a particular unique zone of taxes assigned by taxing authorities.  A Tax Region # is unique.  Every account is considered to reside within a Tax Region, although some Tax Region’s may not charge taxes on Services</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxRegionName" type="TaxRegionName">				<xs:annotation>					<xs:documentation>The name associated with a specific Tax Region #.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="customerTaxId" type="CustomerTaxId">				<xs:annotation>					<xs:documentation>The financial institution’s customer’s Tax ID Number.  This is the number passed from the financial institution to the taxing authority to indicate the specific customer tied to the taxes calculated for this tax region and group of delivered services.  It is typically the TAX ID tied to a customer’s </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxPointDate" type="xs:date" minOccurs="0">				<xs:annotation>					<xs:documentation>The date on which the tax calculation was performed. This date can be used to verify the tax rate value on the calculation date</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="fIVATRegistrationNumber" type="FIVATRegistrationNumber" minOccurs="0">				<xs:annotation>					<xs:documentation>This element is an institution’s VAT Registration Number as provided by the region’s local taxing authority</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="fITaxRegistrationNumber" type="FITaxRegistrationNumber" minOccurs="0">				<xs:annotation>					<xs:documentation>This element is an institution’s Tax Registration Number (TRN) as provided by the tax region’s local taxing authority.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxInvoiceNumber" type="TaxInvoiceNumber" minOccurs="0">				<xs:annotation>					<xs:documentation>A unique number that the customer can use to cross-reference between the Tax Region information and a Tax Invoice or Notice.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="fiContact" type="PartyContactInfo" minOccurs="0"/>			<!--changed type from FIContact to PartyContactInfo (0606-63)-->			<xs:element name="serviceDetail" type="ServiceDetail" maxOccurs="unbounded"/>			<xs:element name="taxCalculation" type="TaxCalculation">				<xs:annotation>					<xs:documentation>Reports total amount of service charge to be taxed in the Tax Region’s Host Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="settlementAmount" type="Money">				<xs:annotation>					<xs:documentation>This is the Total Tax Amount expressed in the Account’s Settlement (Charging) Currency.  The sum of these amounts across all Tax Regions for this statement is displayed as the TaxTotalSum in the Compensation Section</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxDueToRegion" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>Total amount of all taxes for a specific customer within the tax region expressed in the tax region’s Host currency. It is the same value as TotalTax Amoun. It is included here for the specific use of Tax Calculation Methods A and D.</xs:documentation>				</xs:annotation>			</xs:element>			<!--added 0606-65)-->		</xs:sequence>	</xs:complexType>	<!--FIContact no longer used (0606)-->	<!--xs:complexType name="FIContact"> 		<xs:sequence>			<xs:element name="name">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:maxLength value="70"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="bankName" type="BankName"/>			<xs:element name="contactInfo" type="ContactInfo"/>		</xs:sequence>	</xs:complexType-->	<xs:complexType name="ServiceDetail">		<xs:sequence>			<xs:element name="bankServiceID" type="BankServiceID">				<xs:annotation>					<xs:documentation>The bank’s own, internal service identification code.  This is the bank’s own code used to uniquely identify the service within the bank.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceQualifier" type="SubServiceQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>Qualifies the contents of the Sub Service Code. Values are: Lockbox – The Sub Service Code contains a lockbox number which identifies the lockbox using the service. Provides support for processing multiple lockboxes within one account. Store – The Sub Service Code contains a sore number which identifies the store using the service. Provides support for processing multiple stores within one account. MutuallyDefined – The meaing of the Sub Service Code is established by the trading partners SequenceNumber – The Sub Service Code is an arbitrary sequence number used to uniquely identify this Service Sections and prevent duplicate Service Sections within this statement. MemberAcount - The Sub Service Code is the account number of a member of a relationship structure. This allows a parent statement to include the same service as rolled up from its member accounts and still avoid duplicate service identification within the statement</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceCode" type="SubServiceCode" minOccurs="0">				<xs:annotation>					<xs:documentation>A code used to further define a bank service. It is used to specify the value required by the Sub Service Qualifier, e.g., the actual lockbox number or store number.Notes: A unique number can be used to differentiate between multiple appearances of the same service in a Relationship Parent statement that contains all the individual services from the member accounts. For example, the statement may contain multiple Service Sections, all referring to the same service but with differing prices representing the actual prices for the different member accounts. The value “Member Account” can be used in Sub Service Qualifier and the member’s account number can be placed here in order to eliminate duplicate services within the Relationship Parent statement.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceDescription" type="ServiceDescription">				<xs:annotation>					<xs:documentation>This is the bank’s service description. It is not the standard description related to the Common Code. It is the task of the systems that reside in the corporate recipient’s office to restate charges across banks using the Common Codes and the related common descriptions. Note that the common descriptions are not sent in the electronic statement.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="volume" type="Volume" minOccurs="0">				<xs:annotation>					<xs:documentation>The count or number of items (volume) involved in the charge.Notes:1. If the service doesn’t involve a per item charge, e.g. a Flat Charge or a Base Charge, then this element is not required.2. If this is a balance based charge (E.g. Overdraft Interest charge or FDIC charge) then this is the balance used to calculate the charge expressed in the Pricing Currency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="pricingCurrency" type="Currency">				<xs:annotation>					<xs:documentation>The currency in which the Unit Price and Original Charge are expressed. Use the ISO currency code.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="unitPrice" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The per item price used to calculate the charge as expressed in the Pricing Currency.Notes:1. If the service doesn’t involve a per item charge, e.g. a Flat Charge or a Base Charge, then this element is not required.2. If the service is balance based such as an Overdraft Interest charge then this is the per annum rate used to calculate the charge. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalCharge" type="Money">				<xs:annotation>					<xs:documentation>Amount of the calculated charge expressed in the Pricing Currency.  The value is exclusive of any tax.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxCalculation">		<xs:annotation>			<xs:documentation>Changed order to [hostCurCode, taxHostConversion, totalTaxableSvcChargeHost, taxCalculationList, totalTaxAmount] per 0906-9</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="hostCurCode" type="CurCode">				<xs:annotation>					<xs:documentation>This is the currency that all totals for taxable services must be converted to for calculating taxes owed for a tax region.  This also is the currency in which the payment of tax obligations is usually submitted to the taxing authority. Use the ISO currency code.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxHostConversion" type="TaxHostConversion" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>Each Tax Region may have several Total Taxable Charge of Services totals for each currency utilized in the tax region.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="totalTaxableSvcChargeHostAmount" type="Money">				<xs:annotation>					<xs:documentation>The Money Type represents the total of the all services subject to tax for a specific tax region.  This field will equal the sum of all the separate Host Tax Charge for Service Equivalent totals for each individual currency.  It is expressed in the tax region’s Host currency. This total will be used to determine the tax due by calculating using each Tax ID # s rate</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxCalculationList" type="TaxCalculationList" maxOccurs="unbounded">				<xs:annotation>					<xs:documentation>This is the identifying number of a specific tax in the tax region used to calculate the tax obligation. (E.g.  Tax ID # 1, Tax ID # 1 Description, Tax #1 Rate).  Each Tax Identifier is a unique tax.  Tax Identifiers should be as granular as possible for transparency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="totalTaxAmount" type="Money"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxHostConversion">		<xs:sequence>			<xs:element name="taxableSvcChargeAmount" type="Money">				<xs:annotation>					<xs:documentation>This Money Type represents the total of all taxable services in a specific Tax Region for a specific currency.  For example, all Taxable Services for a Tax Region in Euro would be totaled here in the Euro currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxableSvcChargeHostAmount" type="Money">				<xs:annotation>					<xs:documentation>This Money Type has a one-to-one relationship with Total Taxable Charge of Services.  This field is the equivalent of the Total Taxable Charge of Services, but is represented in the Host Currency after conversion.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="TaxCalculationList">		<xs:sequence>			<xs:element name="taxIdentifierNumber" type="TaxIdentifierNumber">				<xs:annotation>					<xs:documentation>This is the identifying number of a specific tax in the tax region used to calculate the tax obligation. (E.g.  Tax ID # 1, Tax ID # 1 Description, Tax #1 Rate).  Each Tax Identifier is a unique tax.  Tax Identifiers should be as granular as possible for transparency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierDescription" type="TaxIdentifierDescription" minOccurs="0">				<xs:annotation>					<xs:documentation>This is the name used to describe an individual Tax Identifier (e.g. National VAT).</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierRate" type="TaxIdentifierRate">				<xs:annotation>					<xs:documentation>This is the rate used in the calculation to determine the tax obligation due for a specific Tax ID # . (e.g. .0300000000</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="taxIdentifierTotalTaxAmount" type="Money">				<xs:annotation>					<xs:documentation>Total amount of all taxes for a specific customer within the tax region.  This is a sum of all individual Total Tax for Tax ID # ’s expressed in the Tax Region’s Host Currency.</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="BalanceAdjustmentDetails">		<xs:sequence>			<xs:element name="adjustmentType" type="BalanceAdjustmentType">				<xs:annotation>					<xs:documentation>Identifies the type of adjustment. Values are: Ledger – The adjustment applies to the average ledger (book) balance. Float - The adjustment applies to the average ledger (book) balance. Collected - The adjustment applies to the average ledger (book) balance</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentDesc" type="BalanceAdjustmentDescription">				<xs:annotation>					<xs:documentation>A free-form description and clarification of the adjustment</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentAmt" type="Money">				<xs:annotation>					<xs:documentation>The amount of the adjustment. If the amount would reduce the underlying balance then the amount should be negatively signed. Expressed in the Account currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentAverage" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The day-weighted net amount of the adjustment to the average collected balance over the statement period. For example, a Ledger adjustment of $1,000 for a period of 19 days in March gives a BalAdj Average balance of  $612.90 = $1,000 * (19/31). Expressed in the Account currency.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentErrorDate" type="xs:date" minOccurs="0">				<xs:annotation>					<xs:documentation>The date the error occurred in the underlying deposit account. This is date on which the transaction causing the error was posted to the account, or the date on which it should have been posted but was not.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentPostDate" type="xs:date">				<xs:annotation>					<xs:documentation>The date on which the error was corrected in the deposit account. If the date is not know then use the last day of the month in which the error was corrected</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentDays" type="BalanceAdjustmentDays" minOccurs="0">				<xs:annotation>					<xs:documentation>The number of days within the period to which the adjustment applies. For example, if $1,000 should have been posted to the deposit account on March 5 (the BalAdj Eror Date) but was actually posted on March 25 (the BalAdj Post Date), then the total number of days would be 19</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="creditAdjustment" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The earnings credit adjustment, debit or credit, resulting from this adjustment’s effect on the average collected balance. If the amount would reduce the credit due then the amount should be negatively signed. Typically expressed in the Settlement Currency.Notes:  Used only if the account can offset charges with earnings credits The net accounting effect of these earnings credit adjustments are reported in the current period statement’s Compensation Section Compensation Identifier as “Earnings Allowance – Net Adjustment"</xs:documentation>				</xs:annotation>			</xs:element>		</xs:sequence>	</xs:complexType>	<xs:complexType name="ServiceAdjustment">		<xs:sequence>			<xs:element name="serviceAdjustmentType" type="ServiceAdjustmentType">				<xs:annotation>					<xs:documentation>Identifies the type of adjustment. Values are: Compensable – The adjustment applies to a service which is balance compensable. Earnings credits based on average balances maintained in the account can be used to offset the service charge. Non-Compensable - The adjustment applies to a service which is not balance compensable. Balance based credits cannot be used to offset the service charge</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceAdjustmentDesc" type="ServiceAdjustmentDescription">				<xs:annotation>					<xs:documentation>A free-form description and clarification of the adjustment</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceAdjustmentAmt" type="Money">				<xs:annotation>					<xs:documentation>The amount of the adjustment. If the amount would reduce charges due then the amount should be negatively signed, Expressed in the Settlement currency.Notes: The accounting effect of this charge adjustment amount should be included in the statement’s Compensation Section Compensation Identifier as either “Service Charges – Net Adjustment – Balance Compensable” or “Service Charges – Net Adjustment – Non-Balance Compensable”</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="balanceRequired" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The amount of average collected balance required to exactly offset a Compensable service charge adjustment amount as carried in the SrvAdj Amount element. Expressed in the Account Currency.Notes: Used only if the adjustment is to a Compensable service. See the Service Adjustment Type element above. Do not include if the Balance Required is not known. If the SrvAdj Amount is negative, then this balance must be negatively signed</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="adjustmentErrorDate" type="xs:date" minOccurs="0">				<xs:annotation>					<xs:documentation>The date on which the situation causing the service adjustment occurred. If the date is not known then used the last day of the month in which the situation occurred or the date of the billing statement which reported the original service to which this adjustment applies</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="serviceAdjustmentId" type="ServiceAdjustmentId" minOccurs="0">				<xs:annotation>					<xs:documentation>This service identification code is used to relate this service adjustment back to the original service being adjusted and which appeared in a Service Section in a prior statement. This should be the same ID code that appeared in the Bank Service ID element within the original Service Section</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceQualifier" type="SubServiceQualifier" minOccurs="0">				<xs:annotation>					<xs:documentation>Qualifies the contents of the Sub Service Code. Values are: Lockbox – The Sub Service Code contains a lockbox number which identifies the lockbox using the service. Provides support for processing multiple lockboxes within one account. Store – The Sub Service Code contains a sore number which identifies the store using the service. Provides support for processing multiple stores within one account. MutuallyDefined – The meaing of the Sub Service Code is established by the trading partners SequenceNumber – The Sub Service Code is an arbitrary sequence number used to uniquely identify this Service Sections and prevent duplicate Service Sections within this statement. MemeberAcount - The Sub Service Code is the account number of a member of a relationship structure. This allows a parent statement to include the same service as rolled up from its member accounts and still avoid duplicate service identification within the statementNotes: This qualifier is used along with the SrvAdj Sub Service Code to relate this service adjustment back to the original service being adjusted and which appeared in a Service Section in a prior statement. This should be the same qualifier code that appeared in the Sub Service Qualifier element within the original Service Section. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="subServiceCode" type="SubServiceCode" minOccurs="0">				<xs:annotation>					<xs:documentation>A code used to further define a bank service. It is used to specify the value required by the SrvAdj Sub Service Qualifier, e.g., the actual lockbox number or store number.Notes: This sub service code is used along with the SrvAdj Sub Service Qualifier to relate this service adjustment back to the original service being adjusted and which appeared in a Service Section in a prior statement. This should be the same sub service code that appeared in the Sub Service Code element within the original Service Section. </xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="priceChange" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The change in the service price. A negative value indicates a price reduction. Expressed in the Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalPrice" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The original service price. Expressed in the Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="newPrice" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The new, adjusted service price. Expressed in the Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="volumeChange" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>The change in the service volume. A negative value indicates a volume reduction.</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalVolume" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>The original service volume</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="newVolume" type="xs:decimal" minOccurs="0">				<xs:annotation>					<xs:documentation>The new, adjusted service volume</xs:documentation>				</xs:annotation>			</xs:element>			<xs:element name="originalCharge" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The original service charge. Expressed in the Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<!--added 0606-68)-->			<xs:element name="newCharge" type="Money" minOccurs="0">				<xs:annotation>					<xs:documentation>The new, adjusted service charge. Expressed in the Pricing Currency</xs:documentation>				</xs:annotation>			</xs:element>			<!--added 0606-69)-->		</xs:sequence>	</xs:complexType></xs:schema>